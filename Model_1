{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7298157,"sourceType":"datasetVersion","datasetId":4233528}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.045609Z","iopub.execute_input":"2025-03-23T20:43:24.045972Z","iopub.status.idle":"2025-03-23T20:43:24.091574Z","shell.execute_reply.started":"2025-03-23T20:43:24.045943Z","shell.execute_reply":"2025-03-23T20:43:24.090425Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/college-placement/placement-dataset.csv\n","output_type":"stream"}],"execution_count":125},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/college-placement/placement-dataset.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.092906Z","iopub.execute_input":"2025-03-23T20:43:24.093279Z","iopub.status.idle":"2025-03-23T20:43:24.102316Z","shell.execute_reply.started":"2025-03-23T20:43:24.093244Z","shell.execute_reply":"2025-03-23T20:43:24.101372Z"}},"outputs":[],"execution_count":126},{"cell_type":"code","source":"#steps\n\n#0. Preprocess + EDA + Feature Selection \n#1. Extract input and output columns \n#2. Scale the values\n#3. Train test split\n#4. Train the model\n#5. Evaluate the model/model selection\n#6. Deploy the model","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.104889Z","iopub.execute_input":"2025-03-23T20:43:24.105349Z","iopub.status.idle":"2025-03-23T20:43:24.115755Z","shell.execute_reply.started":"2025-03-23T20:43:24.105313Z","shell.execute_reply":"2025-03-23T20:43:24.114639Z"}},"outputs":[],"execution_count":127},{"cell_type":"markdown","source":"## Preprocess + EDA + Feature Selection ","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.117543Z","iopub.execute_input":"2025-03-23T20:43:24.117958Z","iopub.status.idle":"2025-03-23T20:43:24.141693Z","shell.execute_reply.started":"2025-03-23T20:43:24.117921Z","shell.execute_reply":"2025-03-23T20:43:24.140688Z"}},"outputs":[{"execution_count":128,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0  cgpa     iq  placement\n0           0   6.8  123.0          1\n1           1   5.9  106.0          0\n2           2   5.3  121.0          0\n3           3   7.4  132.0          1\n4           4   5.8  142.0          0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>cgpa</th>\n      <th>iq</th>\n      <th>placement</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>6.8</td>\n      <td>123.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>5.9</td>\n      <td>106.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>5.3</td>\n      <td>121.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>7.4</td>\n      <td>132.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>5.8</td>\n      <td>142.0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":128},{"cell_type":"code","source":"df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.142694Z","iopub.execute_input":"2025-03-23T20:43:24.143064Z","iopub.status.idle":"2025-03-23T20:43:24.166424Z","shell.execute_reply.started":"2025-03-23T20:43:24.143036Z","shell.execute_reply":"2025-03-23T20:43:24.165152Z"}},"outputs":[{"execution_count":129,"output_type":"execute_result","data":{"text/plain":"    Unnamed: 0  cgpa     iq  placement\n0            0   6.8  123.0          1\n1            1   5.9  106.0          0\n2            2   5.3  121.0          0\n3            3   7.4  132.0          1\n4            4   5.8  142.0          0\n..         ...   ...    ...        ...\n95          95   4.3  200.0          0\n96          96   4.4   42.0          0\n97          97   6.7  182.0          1\n98          98   6.3  103.0          1\n99          99   6.2  113.0          1\n\n[100 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>cgpa</th>\n      <th>iq</th>\n      <th>placement</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>6.8</td>\n      <td>123.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>5.9</td>\n      <td>106.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>5.3</td>\n      <td>121.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>7.4</td>\n      <td>132.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>5.8</td>\n      <td>142.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>95</td>\n      <td>4.3</td>\n      <td>200.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>96</th>\n      <td>96</td>\n      <td>4.4</td>\n      <td>42.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>97</td>\n      <td>6.7</td>\n      <td>182.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>98</td>\n      <td>6.3</td>\n      <td>103.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>99</td>\n      <td>6.2</td>\n      <td>113.0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>100 rows Ã— 4 columns</p>\n</div>"},"metadata":{}}],"execution_count":129},{"cell_type":"code","source":"df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.167661Z","iopub.execute_input":"2025-03-23T20:43:24.168495Z","iopub.status.idle":"2025-03-23T20:43:24.188143Z","shell.execute_reply.started":"2025-03-23T20:43:24.168451Z","shell.execute_reply":"2025-03-23T20:43:24.186962Z"}},"outputs":[{"execution_count":130,"output_type":"execute_result","data":{"text/plain":"(100, 4)"},"metadata":{}}],"execution_count":130},{"cell_type":"code","source":"df.size","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.189203Z","iopub.execute_input":"2025-03-23T20:43:24.189679Z","iopub.status.idle":"2025-03-23T20:43:24.208152Z","shell.execute_reply.started":"2025-03-23T20:43:24.189646Z","shell.execute_reply":"2025-03-23T20:43:24.207019Z"}},"outputs":[{"execution_count":131,"output_type":"execute_result","data":{"text/plain":"400"},"metadata":{}}],"execution_count":131},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.209084Z","iopub.execute_input":"2025-03-23T20:43:24.209450Z","iopub.status.idle":"2025-03-23T20:43:24.231299Z","shell.execute_reply.started":"2025-03-23T20:43:24.209421Z","shell.execute_reply":"2025-03-23T20:43:24.230333Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 100 entries, 0 to 99\nData columns (total 4 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   Unnamed: 0  100 non-null    int64  \n 1   cgpa        100 non-null    float64\n 2   iq          100 non-null    float64\n 3   placement   100 non-null    int64  \ndtypes: float64(2), int64(2)\nmemory usage: 3.2 KB\n","output_type":"stream"}],"execution_count":132},{"cell_type":"code","source":"df.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.235840Z","iopub.execute_input":"2025-03-23T20:43:24.236205Z","iopub.status.idle":"2025-03-23T20:43:24.266186Z","shell.execute_reply.started":"2025-03-23T20:43:24.236177Z","shell.execute_reply":"2025-03-23T20:43:24.264704Z"}},"outputs":[{"execution_count":133,"output_type":"execute_result","data":{"text/plain":"       Unnamed: 0        cgpa          iq   placement\ncount  100.000000  100.000000  100.000000  100.000000\nmean    49.500000    5.991000  123.580000    0.500000\nstd     29.011492    1.143634   39.944198    0.502519\nmin      0.000000    3.300000   37.000000    0.000000\n25%     24.750000    5.075000  101.500000    0.000000\n50%     49.500000    6.000000  127.500000    0.500000\n75%     74.250000    6.900000  149.000000    1.000000\nmax     99.000000    8.500000  233.000000    1.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>cgpa</th>\n      <th>iq</th>\n      <th>placement</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>49.500000</td>\n      <td>5.991000</td>\n      <td>123.580000</td>\n      <td>0.500000</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>29.011492</td>\n      <td>1.143634</td>\n      <td>39.944198</td>\n      <td>0.502519</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>3.300000</td>\n      <td>37.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>24.750000</td>\n      <td>5.075000</td>\n      <td>101.500000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>49.500000</td>\n      <td>6.000000</td>\n      <td>127.500000</td>\n      <td>0.500000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>74.250000</td>\n      <td>6.900000</td>\n      <td>149.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>99.000000</td>\n      <td>8.500000</td>\n      <td>233.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":133},{"cell_type":"code","source":"df = df.iloc[:,1:]\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.268047Z","iopub.execute_input":"2025-03-23T20:43:24.268350Z","iopub.status.idle":"2025-03-23T20:43:24.279772Z","shell.execute_reply.started":"2025-03-23T20:43:24.268323Z","shell.execute_reply":"2025-03-23T20:43:24.278517Z"}},"outputs":[{"execution_count":134,"output_type":"execute_result","data":{"text/plain":"   cgpa     iq  placement\n0   6.8  123.0          1\n1   5.9  106.0          0\n2   5.3  121.0          0\n3   7.4  132.0          1\n4   5.8  142.0          0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cgpa</th>\n      <th>iq</th>\n      <th>placement</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6.8</td>\n      <td>123.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5.9</td>\n      <td>106.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5.3</td>\n      <td>121.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7.4</td>\n      <td>132.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.8</td>\n      <td>142.0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":134},{"cell_type":"code","source":"plt.scatter(df['cgpa'],df['iq'],c=df['placement'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.281124Z","iopub.execute_input":"2025-03-23T20:43:24.281515Z","iopub.status.idle":"2025-03-23T20:43:24.483278Z","shell.execute_reply.started":"2025-03-23T20:43:24.281484Z","shell.execute_reply":"2025-03-23T20:43:24.482231Z"}},"outputs":[{"execution_count":135,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7db3372e7430>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":135},{"cell_type":"markdown","source":"## Extract input and output columns ","metadata":{}},{"cell_type":"code","source":"X = df.iloc[:,:2]\nY = df.iloc[:,-1]\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.484410Z","iopub.execute_input":"2025-03-23T20:43:24.484819Z","iopub.status.idle":"2025-03-23T20:43:24.490251Z","shell.execute_reply.started":"2025-03-23T20:43:24.484779Z","shell.execute_reply":"2025-03-23T20:43:24.488987Z"}},"outputs":[],"execution_count":136},{"cell_type":"markdown","source":"## Train test split","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.491369Z","iopub.execute_input":"2025-03-23T20:43:24.491771Z","iopub.status.idle":"2025-03-23T20:43:24.515419Z","shell.execute_reply.started":"2025-03-23T20:43:24.491733Z","shell.execute_reply":"2025-03-23T20:43:24.514050Z"}},"outputs":[],"execution_count":137},{"cell_type":"code","source":"x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size = 0.1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.516539Z","iopub.execute_input":"2025-03-23T20:43:24.516996Z","iopub.status.idle":"2025-03-23T20:43:24.535314Z","shell.execute_reply.started":"2025-03-23T20:43:24.516966Z","shell.execute_reply":"2025-03-23T20:43:24.534167Z"}},"outputs":[],"execution_count":138},{"cell_type":"code","source":"x_train.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.536414Z","iopub.execute_input":"2025-03-23T20:43:24.536848Z","iopub.status.idle":"2025-03-23T20:43:24.556377Z","shell.execute_reply.started":"2025-03-23T20:43:24.536818Z","shell.execute_reply":"2025-03-23T20:43:24.555375Z"}},"outputs":[{"execution_count":139,"output_type":"execute_result","data":{"text/plain":"(90, 2)"},"metadata":{}}],"execution_count":139},{"cell_type":"code","source":"x_test.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.557509Z","iopub.execute_input":"2025-03-23T20:43:24.557890Z","iopub.status.idle":"2025-03-23T20:43:24.575139Z","shell.execute_reply.started":"2025-03-23T20:43:24.557829Z","shell.execute_reply":"2025-03-23T20:43:24.573955Z"}},"outputs":[{"execution_count":140,"output_type":"execute_result","data":{"text/plain":"(10, 2)"},"metadata":{}}],"execution_count":140},{"cell_type":"markdown","source":"## Scale the values","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nscl = StandardScaler()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.576404Z","iopub.execute_input":"2025-03-23T20:43:24.576763Z","iopub.status.idle":"2025-03-23T20:43:24.590844Z","shell.execute_reply.started":"2025-03-23T20:43:24.576734Z","shell.execute_reply":"2025-03-23T20:43:24.589904Z"}},"outputs":[],"execution_count":141},{"cell_type":"code","source":"x_train = scl.fit_transform(x_train)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.591841Z","iopub.execute_input":"2025-03-23T20:43:24.592190Z","iopub.status.idle":"2025-03-23T20:43:24.612730Z","shell.execute_reply.started":"2025-03-23T20:43:24.592166Z","shell.execute_reply":"2025-03-23T20:43:24.611651Z"}},"outputs":[],"execution_count":142},{"cell_type":"code","source":"x_test = scl.transform(x_test)\nx_test","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.614007Z","iopub.execute_input":"2025-03-23T20:43:24.614413Z","iopub.status.idle":"2025-03-23T20:43:24.635407Z","shell.execute_reply.started":"2025-03-23T20:43:24.614374Z","shell.execute_reply":"2025-03-23T20:43:24.634301Z"}},"outputs":[{"execution_count":143,"output_type":"execute_result","data":{"text/plain":"array([[ 0.31737889,  0.06711298],\n       [-0.57246847, -0.08326466],\n       [ 0.94027205,  1.87164469],\n       [-0.83942268, -0.83515287],\n       [-1.01739215, -0.30883112],\n       [ 2.27504309, -0.1083276 ],\n       [-0.21652953,  0.19242769],\n       [ 1.65214994, -0.25870524],\n       [ 0.49534837, -2.18855165],\n       [ 1.20722626, -0.20857936]])"},"metadata":{}}],"execution_count":143},{"cell_type":"markdown","source":"## Train the model","metadata":{}},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nmodel.fit(x_train,y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.636471Z","iopub.execute_input":"2025-03-23T20:43:24.636888Z","iopub.status.idle":"2025-03-23T20:43:24.660000Z","shell.execute_reply.started":"2025-03-23T20:43:24.636825Z","shell.execute_reply":"2025-03-23T20:43:24.658836Z"}},"outputs":[{"execution_count":144,"output_type":"execute_result","data":{"text/plain":"LogisticRegression()","text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":144},{"cell_type":"markdown","source":"## Evaluate the model","metadata":{}},{"cell_type":"code","source":"print(model.predict(x_test))\nprint(\"====================\")\nprint(y_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.661187Z","iopub.execute_input":"2025-03-23T20:43:24.661511Z","iopub.status.idle":"2025-03-23T20:43:24.675412Z","shell.execute_reply.started":"2025-03-23T20:43:24.661483Z","shell.execute_reply":"2025-03-23T20:43:24.674362Z"}},"outputs":[{"name":"stdout","text":"[1 0 1 0 0 1 0 1 1 1]\n====================\n70    1\n2     0\n26    1\n25    0\n59    0\n69    1\n87    1\n55    1\n82    1\n72    1\nName: placement, dtype: int64\n","output_type":"stream"}],"execution_count":145},{"cell_type":"markdown","source":"**Compare accuracy**","metadata":{}},{"cell_type":"code","source":"y_pred = model.predict(x_test)\nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_pred,y_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.676409Z","iopub.execute_input":"2025-03-23T20:43:24.676714Z","iopub.status.idle":"2025-03-23T20:43:24.696749Z","shell.execute_reply.started":"2025-03-23T20:43:24.676675Z","shell.execute_reply":"2025-03-23T20:43:24.695638Z"}},"outputs":[{"execution_count":146,"output_type":"execute_result","data":{"text/plain":"0.9"},"metadata":{}}],"execution_count":146},{"cell_type":"markdown","source":"## Plot the decision boundary","metadata":{}},{"cell_type":"code","source":"from mlxtend.plotting import plot_decision_regions\nplot_decision_regions(x_train,y_train.values,clf=model,legend=2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:43:24.697975Z","iopub.execute_input":"2025-03-23T20:43:24.698302Z","iopub.status.idle":"2025-03-23T20:43:24.991554Z","shell.execute_reply.started":"2025-03-23T20:43:24.698273Z","shell.execute_reply":"2025-03-23T20:43:24.990467Z"}},"outputs":[{"execution_count":147,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":147},{"cell_type":"markdown","source":"## Deploy the model","metadata":{}},{"cell_type":"code","source":"import pickle","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:44:09.072691Z","iopub.execute_input":"2025-03-23T20:44:09.073102Z","iopub.status.idle":"2025-03-23T20:44:09.077588Z","shell.execute_reply.started":"2025-03-23T20:44:09.073072Z","shell.execute_reply":"2025-03-23T20:44:09.076252Z"}},"outputs":[],"execution_count":148},{"cell_type":"code","source":"pickle.dump(model,open('placement_prediction.pkl','wb'))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-23T20:54:03.245431Z","iopub.execute_input":"2025-03-23T20:54:03.245840Z","iopub.status.idle":"2025-03-23T20:54:03.251378Z","shell.execute_reply.started":"2025-03-23T20:54:03.245812Z","shell.execute_reply":"2025-03-23T20:54:03.250314Z"}},"outputs":[],"execution_count":150},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}